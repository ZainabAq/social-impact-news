runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
install.packages("skimr")
library(skimr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("sparkline")
library(sparkline)
runApp()
runApp()
runApp()
runApp()
runApp()
?sparkline
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("sparkTable")
runApp()
runApp()
runApp()
runApp()
#connect to database
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
names(db)
dbListFields(db, "PoliticsAll")
library(RMySQL)
dbListFields(db, "PoliticsAll")
dbListTables(db)
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
class(myData()$URL)
runApp('App w sql.R')
myData <- as.data.frame(myData())
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
runApp('App w sql.R')
#loading in models
# load(file = 'boosting2.rda')
load(file = 'boostingFINALFINAL.rda')
# load(file = 'boosting.rda')
# load(file = 'svm.rda')
load(file = 'svmFinal.rda')
# load(file = 'logistic_regression_model_s3.rda')
load(file = 'logistic_regression_FINAL.rda')
#loading in models
# load(file = 'boosting2.rda')
load(file = 'boostingFINALFINAL.rda')
# load(file = 'logistic_regression_model_s3.rda')
load(file = 'logistic_regression_FINAL.rda')
# load(file = 'boosting.rda')
# load(file = 'svm.rda')
load(file = 'svmFinal.rda')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
politics_FINAL <- db %>%
tbl("PoliticsAll")
politics_FINAL <- as.data.frame(politics_FINAL)
View(politics_FINAL)
sql <- "
SELECT *
FROM PoliticsAll;
"
all <- db %>%
dbGetQuery(sql)
politics_FINAL <- db %>%
tbl("FINAL_POLITICS")
politics_FINAL <- as.data.frame(politics_FINAL)
politics_FINAL <- as.data.frame(politics_FINAL)
sql <- "
SELECT *
FROM FINAL_POLITICS;
"
all <- db %>%
dbGetQuery(sql)
runApp('App w sql.R')
runApp('App w sql.R')
runApp()
#loading in data
# data <- read.csv("politics-s3-merged.csv")
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
politics_s3 <- db %>%
tbl("FINAL_POLITICS")
politics_s3 <- read.csv("FINAL_DATA_FOR_SQL.csv")
#loading in models
# load(file = 'boosting2.rda')
# load(file = 'boostingfinal.rda')
load(file = 'boostingFINALFINAL.rda')
# load(file = 'logistic_regression_model_s3.rda')
# load(file = 'logistic_regression_model_s4.rda')
load(file = 'logistic_regression_FINAL.rda')
# load(file = 'boosting.rda')
# load(file = 'svm.rda')
# load(file = 'svm-final.rda')
load(file = 'svmFinal.rda')
runApp()
View(politics_s3)
View(politics_s3)
runApp()
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-impact, -URL, -Title) %>%
mutate(Li_ref = as.factor(Li_ref), Pi_ref = as.factor(Pi_ref), Li_int = as.factor(Li_int), Pi_int = as.factor(Pi_int))
View(politics_boost)
pred <- predict(object=mp6, politics_boost, type='prob')
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-impact, -Title) %>%
mutate(Li_ref = as.factor(Li_ref), Pi_ref = as.factor(Pi_ref), Li_int = as.factor(Li_int), Pi_int = as.factor(Pi_int))
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Title) %>%
mutate(Li_ref = as.factor(Li_ref), Pi_ref = as.factor(Pi_ref), Li_int = as.factor(Li_int), Pi_int = as.factor(Pi_int))
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
mutate(Li_ref = as.factor(Li_ref), Pi_ref = as.factor(Pi_ref), Li_int = as.factor(Li_int), Pi_int = as.factor(Pi_int))
pred <- predict(object=mp6, politics_boost, type='prob')
pred <- predict(object=mp6, politics_s3, type='prob')
pred <- pred %>%
select(Y)
pred <- as.vector(pred$Y)
#data for logistic
# politics_s3_log <- politics_s3 %>%
#   rename('Social interactions' = Social_interactions, "smog-index" = smog_index, "total-words" = total_words)
politics_log <- politics_s3 %>%
select(-Impact, -URL, -Title)
pred_log <- predict(m5, politics_log, type = "response")
pred_svm <- predict(bestmod2, politics_s3, probability = TRUE)
pred40 <- data.frame(attr(pred_svm, "probabilities"))
pred40 <- pred40 %>%
select(X1)
pred40 <- as.vector(pred40$X1)
pred_svm <- predict(bestmod2, politics_s3, probability = TRUE)
pred40 <- data.frame(attr(pred_svm, "probabilities"))
pred40 <- pred40 %>%
select(X1)
pred40 <- as.vector(pred40$X1)
runApp()
politics_s3 <- read.csv("FINAL_DATA_FOR_SQL.csv")
#loading in models
# load(file = 'boosting2.rda')
# load(file = 'boostingfinal.rda')
load(file = 'boostingFINALFINAL.rda')
pred <- predict(object=mp6, politics_s3, type='prob')
politics_s3 <- read.csv("FINAL_DATA_FOR_SQL.csv")
#loading in models
# load(file = 'boosting2.rda')
load(file = 'boostingfinal.rda')
# load(file = 'boostingFINALFINAL.rda')
# load(file = 'boosting.rda')
# load(file = 'svm.rda')
load(file = 'svm-final.rda')
# load(file = 'svmFinal.rda')
# load(file = 'logistic_regression_model_s3.rda')
load(file = 'logistic_regression_model_s4.rda')
pred <- predict(object=mp6, politics_s3, type='prob')
#loading in data
# data <- read.csv("politics-s3-merged.csv")
politics_s3 <- read.csv("politics-data-for-model-final2.csv")
pred <- predict(object=mp6, politics_s3, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
mutate(Li_ref = as.factor(Li_ref), Pi_ref = as.factor(Pi_ref), Li_int = as.factor(Li_int), Pi_int = as.factor(Pi_int))
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
mutate(Li_ref = as.factor(Li_ref), Pi_ref = as.factor(Pi_ref), Li_int = as.factor(Li_int), Pi_int = as.factor(Pi_int))
pred <- predict(object=mp6, politics_boost, type='prob')
pred <- pred %>%
select(Y)
pred <- as.vector(pred$Y)
pred_log <- predict(m5, politics_s3, type = "response")
pred_svm <- predict(bestmod2, politics_s3, probability = TRUE)
pred_svm <- predict(bestmod, politics_s3, probability = TRUE)
pred40 <- data.frame(attr(pred_svm, "probabilities"))
pred40 <- pred40 %>%
select(X1)
pred40 <- as.vector(pred40$X1)
######Adding new columns
politics_s3 <- politics_s3 %>%
mutate(predboosting = pred, predlog = pred_log, predsvm = pred40)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
??as.data.frame
runApp()
runApp()
#loading in data
# data <- read.csv("politics-s3-merged.csv")
politics_s3 <- read.csv("politics-data-for-model-final2.csv")
#loading in models
# load(file = 'boosting2.rda')
# load(file = 'boostingfinal.rda')
# load(file = 'boostingFINALFINAL.rda')
# load(file = 'boosting.rda')
load(file = 'boosting_FINAL.rda')
# load(file = 'svm.rda')
# load(file = 'svm-final.rda')
load(file = 'svmFinal.rda')
# load(file = 'logistic_regression_model_s3.rda')
# load(file = 'logistic_regression_model_s4.rda')
load(file = 'logistic_regression_FINAL.rda')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-impact, -Impact) %>%
mutate(Li_ref = as.factor(Li_ref), Pi_ref = as.factor(Pi_ref), Li_int = as.factor(Li_int), Pi_int = as.factor(Pi_int))
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact) %>%
mutate(Li_ref = as.factor(Li_ref), Pi_ref = as.factor(Pi_ref), Li_int = as.factor(Li_int), Pi_int = as.factor(Pi_int))
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact)
pred <- predict(object=mp6, politics_boost, type='prob')
#loading in data
# data <- read.csv("politics-s3-merged.csv")
politics_s3 <- read.csv("politics-data-for-model-final2.csv")
#loading in models
# load(file = 'boosting2.rda')
# load(file = 'boostingfinal.rda')
# load(file = 'boostingFINALFINAL.rda')
# load(file = 'boosting.rda')
load(file = 'boosting_FINAL.rda')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact)
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact, -impact)
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact)
pred <- predict(object=mp6, politics_boost, type='prob')
# load(file = 'svm.rda')
# load(file = 'svm-final.rda')
load(file = 'svmFinal.rda')
politics_svm <- politics_s3 %>%
select(-impact, -Impact)
pred_svm <- predict(bestmod, politics_svm, probability = TRUE)
pred_svm <- predict(bestmod2, politics_svm, probability = TRUE)
#loading in data
# data <- read.csv("politics-s3-merged.csv")
# politics_s3 <- read.csv("politics-data-for-model-final2.csv")
#
politics_s3 <- read.csv("FINAL_DATA_FOR_SQL.csv")
#loading in models
# load(file = 'boosting2.rda')
# load(file = 'boostingfinal.rda')
# load(file = 'boostingFINALFINAL.rda')
# load(file = 'boosting.rda')
load(file = 'boosting_FINAL.rda')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact, impact)
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact, impact)
pred <- predict(object=mp6, politics_boost, type='prob')
pred <- pred %>%
select(Y)
pred <- as.vector(pred$Y)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#data for sum stats
politics_s3_find <- politics_s3 %>%
select(-Title, -URL, -impact, -Impact)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# load(file = 'boostingFINALFINAL.rda')
# load(file = 'boosting.rda')
# load(file = 'svm.rda')
# load(file = 'svm-final.rda')
load(file = 'svmFinal.rda')
politics_svm <- politics_s3 %>%
rename(ImpactBinary = impact) %>%
select(-Impact, -URL, -Title, ImpactBinary)
pred_svm <- predict(bestmod, politics_svm, probability = TRUE)
politics_svm <- politics_s3 %>%
rename(ImpactBinary = impact) %>%
select(-Impact, -URL, -Title, ImpactBinary)
pred_svm <- predict(bestmod, politics_svm, probability = TRUE)
politics_s3 <- read.csv("FINAL_DATA_FOR_SQL.csv")
politics_svm <- politics_s3 %>%
rename(ImpactBinary = impact) %>%
select(-Impact, -URL, -Title, ImpactBinary)
#loading in models
# load(file = 'boosting2.rda')
# load(file = 'boostingfinal.rda')
# load(file = 'boostingFINALFINAL.rda')
# load(file = 'boosting.rda')
load(file = 'boosting_FINAL.rda')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact, -impact)
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact)
pred <- predict(object=mp6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact, -impact)
pred <- predict(object=mp6, politics_boost, type='prob')
pred_log <- predict(m5, politics_s3, type = "response")
#loading in data
# data <- read.csv("politics-s3-merged.csv")
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
politics_s3 <- db %>%
tbl("FINAL_POLITICS")
View(politics_s3)
politics_s3[["src"]]
politics_s3[["ops"]]
politics_s3 <- read.csv("FINAL_DATA_FOR_SQL.csv")
#loading in models
# load(file = 'boosting2.rda')
# load(file = 'boostingfinal.rda')
load(file = 'boostingFINALFINAL.rda')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact, -impact)
pred <- predict(object=mp6, politics_boost, type='prob')
pred <- predict(object=mp6, politics_boost, type='prob')
db <- src_mysql(dbname = "social_impact", default.file=path.expand("~/Documents/social impact news/my.cnf.sh"))
library(RMySQL)
db <- src_mysql(dbname = "social_impact", default.file=path.expand("~/Documents/social impact news/my.cnf.sh"))
db <- src_mysql(dbname= "social_impact", default.file=path.expand("~/Documents/social impact news/my.cnf.sh"))
#loading in data
# data <- read.csv("politics-s3-merged.csv")
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
library(dplyr)
db <- src_mysql(dbname= "social_impact", default.file=path.expand("~/Documents/social impact news/my.cnf.sh"))
db <- src_mysql(dbname= "social_impact", default.file=path.expand("~/Documents/social impact news/my.cnf.sh"))
db <- src_mysql(dbname= "social_impact", default.file=path.expand("~/.my.cnf"))
db <- src_mysql("~/.my.cnf")
db <- src_mysql("~/.my.cnf.sh")
db <- src_mysql("~/.my.cnf")
db <- src_mysql(dbname ="social_impact", path.expand("~/.my.cnf"))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
View(politics_s3)
politics_s3$Other_int
runApp()
runApp()
politics_s3 <- read.csv("FINAL_DATA_FOR_SQL.csv")
glimpse(politics_s3)
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
#
politics_s3 <- db %>%
tbl("FINAL_POLITICS")
glimpse(politics_s3)
#
politics_s3_db <- db %>%
tbl("FINAL_POLITICS")
politics_s3 <- read.csv("FINAL_DATA_FOR_SQL.csv")
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
#
politics_s3_db <- db %>%
tbl("FINAL_POLITICS")
class(politics_s3)
class(politics_s3_db)
print(object.size(politics_s3), units = "Kb")
print(object.size(politics_s3_db), units = "Kb")
names(politics_s3)
names(politics_s3_db)
politics_s3_db$neg4
#
politics_s3 <- db %>%
tbl("FINAL_POLITICS")
#loading in models
# load(file = 'boosting2.rda')
# load(file = 'boostingfinal.rda')
# load(file = 'boostingFINALFINAL.rda')
load(file = 'GBM_Final.rda')
# load(file = 'boosting.rda')
# load(file = 'boosting_FINAL.rda')
# load(file = 'svm.rda')
# load(file = 'svm-final.rda')
load(file = 'svmFinal.rda')
# load(file = 'logistic_regression_model_s3.rda')
# load(file = 'logistic_regression_model_s4.rda')
load(file = 'logistic_regression_FINAL.rda')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
select(-Impact, -impact)
pred <- predict(object=mpf6, politics_boost, type='prob')
pred <- pred %>%
select(Y)
pred <- predict(object=mpf6, politics_boost, type='prob')
#Creating new politics data, where impact is a character vector
politics_boost <- politics_s3 %>%
rename(Impact = ImpactBinary) %>%
select(-Impact, -impact)
pred <- predict(object=mpf6, politics_boost, type='prob')
glimpse(politics_s3)
#
politics_s3 <- db %>%
tbl("FINAL_POLITICS") %>%
collect()
#
politics_s3 <- db %>%
tbl("FINAL_POLITICS") %>%
collect(n = Inf)
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
politics_s3 <- db %>%
tbl("FINAL_POLITICS")
politics_s3
politics_s3 %>% head(30)
politics_s3 %>% head(30) %>% nrow()
politics_s3 %>% head(30) %>% collect() %>% nrow()
politics_s3 <- db %>%
tbl("FINAL_POLITICS") %>%
collect(n = Inf)
politics_s3 %>% class()
db <- src_mysql(dbname = "social_impact", host="scidb.smith.edu", port=3306, user = "capstone18", password="Stats4ever")
#
the_article <- db %>%
tbl("FINAL_POLITICS") %>%
filter(URL == input$URL1) %>%
collect(n = Inf)
politics_s3$Title[1] -> input$URL1
politics_s3$Title[1] -> x
input <- data.frame(URL1 = x)
input
input <- politics_s3[1,]
input
input <- mutate(URL1 = URL)
input <- mutate(input, URL1 = URL)
#
the_article <- db %>%
tbl("FINAL_POLITICS") %>%
filter(URL == input$URL1) %>%
collect(n = Inf)
pull(the_article, "Title")
predict(mpf6, newdata = input)
